// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// rcpp_pt
NumericVector rcpp_pt(NumericVector q, double nu, double delta, bool lower);
RcppExport SEXP _NCdistributions_rcpp_pt(SEXP qSEXP, SEXP nuSEXP, SEXP deltaSEXP, SEXP lowerSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type q(qSEXP);
    Rcpp::traits::input_parameter< double >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< double >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< bool >::type lower(lowerSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_pt(q, nu, delta, lower));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_qt
NumericVector rcpp_qt(NumericVector p, double nu, double delta, bool lower);
RcppExport SEXP _NCdistributions_rcpp_qt(SEXP pSEXP, SEXP nuSEXP, SEXP deltaSEXP, SEXP lowerSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type p(pSEXP);
    Rcpp::traits::input_parameter< double >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< double >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< bool >::type lower(lowerSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_qt(p, nu, delta, lower));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_pchisq
NumericVector rcpp_pchisq(NumericVector q, double nu, double delta, bool lower);
RcppExport SEXP _NCdistributions_rcpp_pchisq(SEXP qSEXP, SEXP nuSEXP, SEXP deltaSEXP, SEXP lowerSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type q(qSEXP);
    Rcpp::traits::input_parameter< double >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< double >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< bool >::type lower(lowerSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_pchisq(q, nu, delta, lower));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_qchisq
NumericVector rcpp_qchisq(NumericVector p, double nu, double delta, bool lower);
RcppExport SEXP _NCdistributions_rcpp_qchisq(SEXP pSEXP, SEXP nuSEXP, SEXP deltaSEXP, SEXP lowerSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type p(pSEXP);
    Rcpp::traits::input_parameter< double >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< double >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< bool >::type lower(lowerSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_qchisq(p, nu, delta, lower));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_chisq_ncp
double rcpp_chisq_ncp(double nu, double q, double p);
RcppExport SEXP _NCdistributions_rcpp_chisq_ncp(SEXP nuSEXP, SEXP qSEXP, SEXP pSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< double >::type q(qSEXP);
    Rcpp::traits::input_parameter< double >::type p(pSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_chisq_ncp(nu, q, p));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_chisq_nu
double rcpp_chisq_nu(double ncp, double q, double p);
RcppExport SEXP _NCdistributions_rcpp_chisq_nu(SEXP ncpSEXP, SEXP qSEXP, SEXP pSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type ncp(ncpSEXP);
    Rcpp::traits::input_parameter< double >::type q(qSEXP);
    Rcpp::traits::input_parameter< double >::type p(pSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_chisq_nu(ncp, q, p));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_pf
NumericVector rcpp_pf(NumericVector q, double nu1, double nu2, double delta, bool lower);
RcppExport SEXP _NCdistributions_rcpp_pf(SEXP qSEXP, SEXP nu1SEXP, SEXP nu2SEXP, SEXP deltaSEXP, SEXP lowerSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type q(qSEXP);
    Rcpp::traits::input_parameter< double >::type nu1(nu1SEXP);
    Rcpp::traits::input_parameter< double >::type nu2(nu2SEXP);
    Rcpp::traits::input_parameter< double >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< bool >::type lower(lowerSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_pf(q, nu1, nu2, delta, lower));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_qf
NumericVector rcpp_qf(NumericVector p, double nu1, double nu2, double delta, bool lower);
RcppExport SEXP _NCdistributions_rcpp_qf(SEXP pSEXP, SEXP nu1SEXP, SEXP nu2SEXP, SEXP deltaSEXP, SEXP lowerSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type p(pSEXP);
    Rcpp::traits::input_parameter< double >::type nu1(nu1SEXP);
    Rcpp::traits::input_parameter< double >::type nu2(nu2SEXP);
    Rcpp::traits::input_parameter< double >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< bool >::type lower(lowerSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_qf(p, nu1, nu2, delta, lower));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_pbeta
NumericVector rcpp_pbeta(NumericVector q, double a, double b, double delta, bool lower);
RcppExport SEXP _NCdistributions_rcpp_pbeta(SEXP qSEXP, SEXP aSEXP, SEXP bSEXP, SEXP deltaSEXP, SEXP lowerSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type q(qSEXP);
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    Rcpp::traits::input_parameter< double >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< bool >::type lower(lowerSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_pbeta(q, a, b, delta, lower));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_qbeta
NumericVector rcpp_qbeta(NumericVector p, double a, double b, double delta, bool lower);
RcppExport SEXP _NCdistributions_rcpp_qbeta(SEXP pSEXP, SEXP aSEXP, SEXP bSEXP, SEXP deltaSEXP, SEXP lowerSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type p(pSEXP);
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    Rcpp::traits::input_parameter< double >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< bool >::type lower(lowerSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_qbeta(p, a, b, delta, lower));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_NCdistributions_rcpp_pt", (DL_FUNC) &_NCdistributions_rcpp_pt, 4},
    {"_NCdistributions_rcpp_qt", (DL_FUNC) &_NCdistributions_rcpp_qt, 4},
    {"_NCdistributions_rcpp_pchisq", (DL_FUNC) &_NCdistributions_rcpp_pchisq, 4},
    {"_NCdistributions_rcpp_qchisq", (DL_FUNC) &_NCdistributions_rcpp_qchisq, 4},
    {"_NCdistributions_rcpp_chisq_ncp", (DL_FUNC) &_NCdistributions_rcpp_chisq_ncp, 3},
    {"_NCdistributions_rcpp_chisq_nu", (DL_FUNC) &_NCdistributions_rcpp_chisq_nu, 3},
    {"_NCdistributions_rcpp_pf", (DL_FUNC) &_NCdistributions_rcpp_pf, 5},
    {"_NCdistributions_rcpp_qf", (DL_FUNC) &_NCdistributions_rcpp_qf, 5},
    {"_NCdistributions_rcpp_pbeta", (DL_FUNC) &_NCdistributions_rcpp_pbeta, 5},
    {"_NCdistributions_rcpp_qbeta", (DL_FUNC) &_NCdistributions_rcpp_qbeta, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_NCdistributions(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
